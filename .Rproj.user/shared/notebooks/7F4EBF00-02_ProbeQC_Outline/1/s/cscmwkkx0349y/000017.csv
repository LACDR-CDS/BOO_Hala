"0","#Prepare data for plotting:"
"0","#    - Filter out probes that were flagged for removal (as their CPM might be NA or irrelevant)."
"0","#    - Calculate log2(average_cpm + 1). Adding 1 avoids log2(0)."
"0","plot_data_log_cpm <- manifest %>%"
"0","  filter(flag_realignment != ""Remove"") %>% # Focus on probes we intend to keep/use"
"0","  filter(!is.na(average_cpm)) %>%        # Ensure average_cpm is not NA for calculation"
"0","  mutate(log2_avg_cpm_plus_1 = log2(average_cpm + 1))"
"0",""
"0","# 2. Create the histogram"
"0","  cpm_distribution_plot <- ggplot(plot_data_log_cpm, aes(x = log2_avg_cpm_plus_1)) +"
"0","    geom_histogram(binwidth = 0.5, fill = ""steelblue"", color = ""black"", alpha = 0.7) +"
"0","    labs("
"0","      title = ""Distribution of log2(Average CPM + 1) per Probe"","
"0","      x = ""log2(Average CPM + 1)"","
"0","      y = ""Number of Probes (Frequency)"""
"0","    ) +"
"0","    theme_minimal(base_size = 12) +"
"0","    theme("
"0","      plot.title = element_text(hjust = 0.5, face = ""bold"")"
"0","    )"
"0","  # 3. Add a vertical line for the threshold (average CPM < 1)"
"0","  threshold_log_value <- log2(1 + 1) # log2(Average CPM of 1 + 1)"
"0","  "
"0","  cpm_distribution_plot <- cpm_distribution_plot +"
"0","    geom_vline("
"0","      xintercept = threshold_log_value, "
"0","      color = ""red"", "
"0","      linetype = ""dashed"", "
"0","      linewidth = 1"
"0","    ) +"
"0","    annotate("
"0","      ""text"", "
"0","      x = threshold_log_value, "
"0","      y = Inf, # Position at the top"
"0","      label = paste0(""Avg. CPM = 1\n(log2(1+1) = "", round(threshold_log_value,2), "")""), "
"0","      hjust = -0.1, # Horizontal adjustment (negative moves right from line)"
"0","      vjust = 1.5,  # Vertical adjustment (positive moves down from top)"
"0","      color = ""red"", "
"0","      size = 3.5"
"0","    )"
"0","   print(cpm_distribution_plot)"
"0",""
