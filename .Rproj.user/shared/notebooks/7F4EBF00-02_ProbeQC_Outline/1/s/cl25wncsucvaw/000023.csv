"0","#alculate library sizes (total counts per sample)"
"0",""
"0","library_sizes <- colSums(countData)"
"0","print(head(library_sizes))"
"1","CS1106_C1_P1_R1 "
"1","CS1106_C1_P1_R2 "
"1","CS1106_C1_P1_R3 "
"1","CS1106_C2_P1_R1 "
"1","CS1106_C2_P1_R2 "
"1","CS1106_C2_P1_R3 "
"1","
"
"1","        3232071 "
"1","        2997918 "
"1","        3480381 "
"1","        3355663 "
"1","        3051648 "
"1","        3330525 "
"1","
"
"0","# Calculate CPM values: Divide each column by its library size, Then Multiply by one million to get CPM"
"0","proportions_data <- sweep(countData, MARGIN = 2, STATS = library_sizes, FUN = ""/"")"
"0","cpmData <- proportions_data * 1e6 # 1e6 is 1,000,000"
"0",""
"0","cat(""Successfully calculated CPM values and stored them in 'cpmData'.\n"")"
"1","Successfully calculated CPM values and stored them in 'cpmData'.
"
"0","cat(""Dimensions of 'cpmData': "", "
"0","    nrow(cpmData), ""rows (probes/genes), "", ncol(cpmData), ""columns (samples)\n\n"")"
"1","Dimensions of 'cpmData': "
"1"," "
"1","21930"
"1"," "
"1","rows (probes/genes), "
"1"," "
"1","60"
"1"," "
"1","columns (samples)

"
"0","print(head(cpmData[, 1:min(5, ncol(cpmData))])) "
