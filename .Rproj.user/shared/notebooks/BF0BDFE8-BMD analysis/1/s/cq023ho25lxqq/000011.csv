"0","# Original dataframe with IDs to keep track of rows"
"0","ora_low_filtered <- data.frame("
"0","  ID = 1:3,"
"0","  Genes = c("
"0","     	""EIF4A2;RPL4;EIF4A1;RPL32;RPL31;RPL8;RPL36;RACK1;RPLP2;RPL15;RPS11;RPL18;RPS27A;ZC3H15;RPS12;RPL21;RPL23;RPS5;RPL22;GTPBP1;RPS25;SARS1;EIF3M;RPL28;RPS21"",	"
"0","      ""RPL4;MRPS17;MRPS15;RPL32;RPL31;MRPL18;RPL8;MRPL35;MRPL32;RPL36;ST3GAL4;ENPP1;RPLP2;KPNA4;RPL15;RPS11;RPL18;RPS27A;GAL3ST4;RPS12;RPL21;RPL23;RPS5;RPL22;INHBA;EEF2       RPL23;GTPBP1;EXT1;RPS25;SARS1;GOLPH3;NACA;AGO2;RPL28;RPS21;RSL24D1;EIF4G2"" ,	"
"0","      ""GSK3B;UBXN1;RNF14;UBE2D3;RNF19B;TNFAIP3;UBE2L3;HERPUD1;RPGR;HERC4;PSMD2;PSMD1;UBL7;SKP1;FBXW11;UBE2E1;RC3H1;VPS37A;FBXO10;TRPC4AP;RNF123;PLAA;BIRC2;PSMD11"""
"0","  ),"
"0","  stringsAsFactors = FALSE"
"0",")"
"0",""
"0","# Split each row's Genes column into a list of vectors"
"0","split_genes <- strsplit(ora_low_filtered$Genes, split = "";"")"
"0",""
"0","# Create a new dataframe with one row per gene, keeping original row ID"
"0","df_long_manual <- data.frame("
"0","  ID = rep(ora_low_filtered$ID, times = sapply(split_genes, length)),"
"0","  Gene = unlist(split_genes),"
"0","  stringsAsFactors = FALSE"
"0",")"
"0",""
"0","print(df_long_manual)"
