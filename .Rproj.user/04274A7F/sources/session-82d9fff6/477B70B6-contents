---
title: "BOO 2025 - Example Analysis"
subtitle: "Script 4: PCA - Questions"
date: "`r Sys.Date()`" 
author: 
 Hala Saab
output:
  html_document:
    code_download: true
    theme: united
    highlight: tango
    df_print: paged
    toc: true
    number_sections: true
    toc_float:
      collapsed: false
      smooth_scroll: true
---

***

> In this script, you will perform principal component analysis (PCA) to further explore patterns in the project data.

***

# Setup

## Clean

As before, we perform several setup steps at the start of the script to ensure our work is reproducible and clear. 

**Exercise 1: Download the R markdown template, clean your environment, and set the following variables:**

* `root_dir` - project folder
* `cpm_path` - location of the `cpmData` object
* `metadata_path` - location of the `metaData` object

```{r clean}
# clean
ls()

```

```{r}

cpm_path <- file.path("output/sampleQC_cpmData.RData")
metadata_path <- file.path("output/sampleQC_metaData.RData")
```

***

## Packages

Two new ComplexHeatmap are introduced in this script:

* `ComplexHeatmap` allows the drawing and annotation of heatmaps in R
* `
` allows for the drawing of circular plots, but is also used by `ComplexHeatmap` for colour functions like `colorRamp2()`

**Exercise 2: Load these packages alongside `tidyverse` into your R environment:**




```{r load-packages, warning=F, message=F}


library(tidyverse)   
library(ComplexHeatmap)
library(circlize)       
```

***

## Load data

**Exercise 3: Load the CPM and metadata into your R environment:**

```{r load-data, warning=FALSE, message=FALSE}
#

```

***

# PCA

## Calculate

In high dimensional data (such as this data with around 10,000 genes), principal components (PCs) can be calculated and used to explore patterns. PCs can be thought of as a new axis in the data that captures the most variance possible in the fewest variables. 

**Exercise 4: Use the `prcomp()` function to calculate PCs of the `cpmData`:**

```{r pca-calc}
#

```

Tolerance (or `tol`) can be adjusted to create more or fewer PCs, where a lower tolerance generates a higher number. If this argument is not set, the PCs calculated will capture the full variability of the CPM data.

***

## Variance explained

**Exercise 5: Use the output of `prcomp()` to explore your PCs and calculate the variance in CPM values that they explain:**

<details>
  <summary><strong>Hint</strong></summary>

  Variance explained is the SD squared divided by the sum of the variance for all PCs. 

</details>

```{r pc-summ}
#

```

***

## Screeplot

A screeplot can be used to visualize how each subsequent PC captures less and less of the total variance in the data.

**Exercise 6: Plot the top 20 calculated PCs against the variance they explain to generate a screeplot:**

```{r screeplot}
#

```

***

## Relation to known variables

By investigating how PCs correlate with known variables, we can assess how much each factor impacts expression. 

**Exercise 7: Add the PCs that explain more than 1% variance in CPM values to the metaData for further investigation:**

```{r add-pc}
#

```

***

Correlations between known factors and PCs can be calculated using the `cor()` function, which was used for the replicate correlation in the sample QC.

**Exercise 8: Generate a matrix of correlations between PCs explaining over 1% of CPM variance and known factors**

<details>
  <summary><strong>Hint</strong></summary>

  Variables that have a standard deviation above 0 will have a correlation of NA, so you may want to remove these.

</details>

```{r plot-vars, warning=F, message=F}
#

```

***

Such a correlation matrix can be visualized using a heatmap.

**Exercise 9: Create a heatmap of correlations between known factors and the selected PCs:**

<details>
  <summary><strong>Hint</strong></summary>

  `colorRamp2` can be used to generate a custom colour palette.

</details>

```{r heatmap}
#

```

***

## PCA plot

**Exercise 10: Make a plot of two important PCs against each other, coloured by a relevant factor:**

<details>
  <summary><strong>Hint</strong></summary>

  You can use different shapes to visualize multiple factors in the same plot.

</details>

```{r pca-plot}
#

```

***

# Advanced questions

Sometimes a PCA plot can highlight important clusters in your data. Gene loadings can be used to assess which gene's expression is driving these clusters.

**Exercise 11: Investigate a pattern in your data and identify what genes are responsible for it:**

```{r advanced-pca}
#

```

***

# Session Info

**Exercise 12: Print your session info at the end of the script, knit the R markdown document, and push it to GitHub:**

```{r session-info}
#

```

***

That is the end of the entire QC pipeline. Example answers will be available from the `BOO_template` GitHub on Tuesday. 

***
